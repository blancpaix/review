<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--
Spring 자신만의 [컨테이너(Spring 전용 메모리 공간)] 제공 (IoC 컨테이너) 안에서
[ 객체를 만들고 조립 (관계...의존성 ) ] 설정

>> DIConfig.xml 문서를 read 해서.... 안에 있는 코드 먼저 실행
>> xml 파일 은 컨테이너를 구성하는 객체를 생성하고 의존을 설정하는 파일
	또는 Annotation 을 통해서 컨테이너 자원 구성
	
	: 제어의 역전 (프로그램의 제어 구조를 바꾼다)
	: 작은 단위의 부품을 만들어 놓고 그것을 조립하는 행위 (레고 블럭 만드는 것 처럼)
	
	MessageBeanImpl messagebean = new MessageBeanImpl("hong");
	
	messagebean.setGreeting("hello"); 		// setter
	
	// main
	messagebean.sayHello();
	
	
	DI 문법)
	<bean id ="한개의 이름 (식별자)" name="여러개의 이름>> 구분자 : (,) (공백) (;)"></bean>
		ex) <bean id="" class="" name="m1,m2 m3; m4"> 
		
	
	객체를 생성하고 필요한 객체를 주입 >> xml 파일
	주입 방법 : 
	생성자 주입 		: (mandatory)	<constructor-arg>
	setter 주입 	: (optional)	<property name>
	
-->

	<bean id="messagebean" class="DI_04_Spring.MessageBeanImpl" name="m1,m2 m3;m4">
		<constructor-arg value="홍길동"/>
		<!-- setGreeting 을 구현하는 member field 이름을 사용해야 합니다! --> 
		<property name="greeting" value="hello"> </property>
		
		
		<!-- 
		<constructor-arg>
			<value>hong</value>
		</constructor-arg>
		-->
		
	</bean>	

</beans>