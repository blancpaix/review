<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--
Spring 자신만의 [컨테이너(Spring 전용 메모리 공간)] 제공 (IoC 컨테이너) 안에서
[ 객체를 만들고 조립 (관계...의존성 ) ] 설정

>> DIConfig.xml 문서를 read 해서.... 안에 있는 코드 먼저 실행
>> xml 파일 은 컨테이너를 구성하는 객체를 생성하고 의존을 설정하는 파일
	또는 Annotation 을 통해서 컨테이너 자원 구성
	
	: 제어의 역전 (프로그램의 제어 구조를 바꾼다)
	: 작은 단위의 부품을 만들어 놓고 그것을 조립하는 행위 (레고 블럭 만드는 것 처럼)
			
	MyBean mybean = new MyBean();
	MyBean mybean2 = new MyBean("hong");
	
	Singleton single = Singleton.getInstance();
	Singleton single2 = Singleton.getInstance();
	
		
	
-->
	<bean id="mybean" class="DI_05_Spring.MyBean"></bean>
	<bean id="mybean" class="DI_05_Spring.MyBean2">
		<constructor-arg value="hong" />
	</bean>
	<bean id="single" class="DI_05_Spring.Singleton" 
		factory-method="getInstance"></bean>
		<!-- Singleton 하기위해서는 factory-method 사용한다는데??? 정확하지는 앟아므 -->
													
</beans>

<!-- 
	Singleton single = Singleton.getInstance();
	xml 설정
	3.x.x version : factory-method="getInstance"
	4.x.x version : 굳이 위에꺼 안써도 생성자가 private로 막혀있으면 알아서 처리해줘서 생략 가능
					함수를 호출 해줌.. 가독성 측면에서는 쓰는게 나아서 위의 방식쓰는게 좋겠죠??
	
 -->